package L_10_Examples;

// Прочитать и вывести на экран информацию из предварительно созданного файла с использованием буфера в 5 байт.

import java.io.*;
import java.util.Arrays;

public class L10_3 {
	// Считывание по 5 символов(буфер)
	public static void readAllByArray(InputStream in) throws IOException {
		byte [] buff = new byte[5]; // создание байтового массива размером 5
		while(true) {
			int count = in.read(buff);  // написал справку после кода
			if(count != -1) {    // проверка на конец файла
				System.out.println("количество = " + count + ",buff = " + Arrays.toString(buff) + ",str = " + new String(buff,0,count,"cp1251")); //"UTF8"
				// На вывод :      количество читаемых байт (5),  показываем массив который прочитали, преобразуем данные буфера в строку
			}
			else {
				break;
			}
		}
	}
	
	public static void main (String[] args) throws IOException {
		String fileName = "C:\\Papka1\\MyFile2.txt";
		InputStream inFile = null;  // Переменная обьявляется до блоков try-catch, чтобы не ограничивать область видимости
		
		try {
			// Открывается соединение с фактическим файлом на компьютере.
			// Если указанный путь является катлогом или не обычным файлом или его не существует, то выдается исклюбчение FileNotFoundException
			inFile = new FileInputStream(fileName); 
			readAllByArray(inFile);
		}
		catch(IOException e) {
			System.out.println("Ошибка открытия-закрытия файла " + fileName + e);
		}
		finally {  // Коректное закрытие потока
			if(inFile != null) {
				try {
					inFile.close();
				}
				catch(IOException ignore) {
					/*NOP*/
				}
			}
		}
	}
}



/* 			Справка про 13 строку
 * 
 * int count = in.read(buff);
 * 
 * int java.io.InputStream.read(byte[] ) throws IOException
 * 
 * Считывает некоторое количество байтов из входного потока и сохраняет их в буферном массиве b.
 * Количество фактически прочитанных байтов возвращается как целое число. 
 * Этот метод блокируется до тех пор, пока не будут доступны входные данные, не будет обнаружен конец файла или не будет выдано исключение. 
 * 
 * Если длина b равна нулю, то байты не считываются и возвращается 0;
 * в противном случае выполняется попытка считывания по крайней мере одного байта.
 * Если ни один байт не доступен, поскольку поток находится в конце файла, возвращается значение -1;
 * в противном случае по крайней мере один байт считывается и сохраняется в b. 
 * 
 * Первый прочитанный байт сохраняется в элементе b[0], затем следующий байт в b[1] и так далее.
 * Количество прочитанных байт, самое большее, равно длине b.
 * Пусть k - количество фактически прочитанных байт;
 * эти байты будут сохранены в элементах b[0] через b[k-1], оставляя элементы b[k] через b[b.length-1] незатронутыми.
 * 
 */

